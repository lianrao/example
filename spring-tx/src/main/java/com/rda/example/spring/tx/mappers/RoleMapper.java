package com.rda.example.spring.tx.mappers;


import com.rda.example.spring.tx.model.Role;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
public interface RoleMapper {

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * t_role
   *
   * @mbggenerated Mon Sep 15 11:07:53 CST 2014
   */
  int deleteByPrimaryKey(Long id);

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * t_role
   *
   * @mbggenerated Mon Sep 15 11:07:53 CST 2014
   */
  int insert(Role record);

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * t_role
   *
   * @mbggenerated Mon Sep 15 11:07:53 CST 2014
   */
  int insertSelective(Role record);

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * t_role
   *
   * @mbggenerated Mon Sep 15 11:07:53 CST 2014
   */
  Role selectByPrimaryKey(Long id);

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * t_role
   *
   * @mbggenerated Mon Sep 15 11:07:53 CST 2014
   */
  int updateByPrimaryKeySelective(Role record);

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * t_role
   *
   * @mbggenerated Mon Sep 15 11:07:53 CST 2014
   */
  int updateByPrimaryKey(Role record);

  /**
   * 此方法返回记录为上不包含下包含即大于等于start,小于end;且如果start,end都为null则查询满足条件的所有记录.<br/> 此返回条件判断其值不为
   * null且不为空'';<br/> 若strict为true则精确匹配所有值,若为false则模糊匹配所有类型为String的值;<br/> 注意：java的Date不能完成匹配Oracle
   * Date类型，即insert date into table 然后使用同一值date select是取不到对应记录的.<br/> This method was generated by
   * MyBatis Generator.<br/> This method corresponds to the database table t_role
   *
   * @mbggenerated Mon Sep 15 11:07:53 CST 2014
   */
  List<Role> selectByModelWithPagingSelective(@Param("cond") Role cond,
                                              @Param("start") Integer start,
                                              @Param("pageSize") Integer pageSize,
                                              @Param("strict") boolean strict);

  /**
   * 此方法返回满足条件的记录数;<br/> 此返回条件判断其值不为 null且不为空'';<br/> 若strict为true则精确匹配所有值,若为false则模糊匹配所有类型为String的值;<br/>
   * This method was generated by MyBatis Generator.<br/> This method corresponds to the database
   * table<br/> t_role
   *
   * @mbggenerated Mon Sep 15 11:07:53 CST 2014
   */
  Integer countByModelSelective(@Param("cond") Role cond,
                                @Param("strict") boolean strict);

  /**
   * 此方法删除满足条件的记录数;<br/> 此条件判断其值不为 null且不为空'';<br/> 若strict为true则精确匹配所有值,若为false则模糊匹配所有类型为String的值;<br/>
   * This method was generated by MyBatis Generator.<br/> This method corresponds to the database
   * table<br/> t_role
   *
   * @mbggenerated Mon Sep 15 11:07:53 CST 2014
   */
  Integer deleteByModelSelective(@Param("cond") Role cond,
                                 @Param("strict") boolean strict);

  /**
   * 此方法根据cond设置条件更新model中设置的字段值;<br/> 此条件判断其值不为 null且不为空'';<br/> 若strict为true则精确匹配所有值,若为false则模糊匹配所有类型为String的值;<br/>
   * This method was generated by MyBatis Generator.<br/> This method corresponds to the database
   * table<br/> t_role
   *
   * @mbggenerated Mon Sep 15 11:07:53 CST 2014
   */
  Integer updateByModelSelective(@Param("cond") Role cond,
                                 @Param("strict") boolean strict, @Param("model") Role model);

  /**
   * 此方法返回满足条件的单条记录.<br/> 此返回条件判断其值不为 null且不为空'';<br/> 若strict为true则精确匹配所有值,若为false则模糊匹配所有类型为String的值;<br/>
   * 注意：java的Date不能完成匹配Oracle Date类型，即insert date into table 然后使用同一值date select是取不到对应记录的.<br/> This
   * method was generated by MyBatis Generator.<br/> This method corresponds to the database table
   * t_role
   *
   * @mbggenerated Mon Sep 15 11:07:53 CST 2014
   */
  Role selectByModelSelective(@Param("cond") Role cond,
                              @Param("strict") boolean strict);

  /**
   * 根据用户名查询用户的角色信息
   */
  List<Role> selectRolesOfUserByName(@Param("username") String username);

  /**
   * 根据roleID删除其所有permission
   */
  int deleteAllPermissionsById(@Param("roleId") Long roleId);

  /**
   * 删除角色的菜单权限
   * @param roleId
   */
  void deleteMenusByRoleId(@Param("roleId") Long roleId);

  List<Role> selectRolesOfUserById(Long id);
  
  /**
   * 按条件查询数量
   * @param cond
   * @return
   */
  Integer countByCond(@Param("cond") Role cond, @Param("strict") boolean strict);

  /**
   * 根据角色名查询角色
   * @param roleName
   * @return
   */
  List<Role> selectRoleByName(@Param("roleName") String roleName);
	
}